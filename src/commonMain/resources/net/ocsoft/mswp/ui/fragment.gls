precision mediump float;
uniform vec3 uLightPosition;
uniform vec3 uEyePosition;
uniform bool uEnableLighting;
uniform bool uEnableTexture;
uniform sampler2D uSampler;
varying vec4 vNormal;
varying vec4 vPosition;
varying vec4 vColor;
varying vec2 vTextureCoord;
void main() {
    vec4 color;
    vec4 texColor;
    vec4 alphaColor;
    bvec4 maskVec;
    if (uEnableTexture) {
        texColor = texture2D(uSampler, vTextureCoord);
     } else {
        texColor = vec4(0.0, 0.0, 0.0, 0.0); 
    }
    // maskVec = greaterThan(texColor, vec4(0, 0, 0, 0));
    color = mix(vColor, texColor, texColor.a); 
    if (uEnableLighting) { 
        vec3 lightVec = uLightPosition - vPosition.xyz;
        vec3 viewDir = normalize(uEyePosition - vPosition.xyz);
        vec3 reflectDir = reflect(- lightVec, vNormal.xyz);
        float specular = pow(max(dot(viewDir, reflectDir), 0.0), 1.0) * 0.8;
        color = color * vec4(vec3(specular), 1.0);
    } 
    gl_FragColor = color;
}
